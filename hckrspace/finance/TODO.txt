







основные функции редактирования:
1) добавить взнос (событие)
2) добавить оплату (событие)
3) обмен (событие) - купить/продать валюту с автоматическим подстчётом




сводные данные за период, вместе с балансом после каждой операции:
1) по субьектам: всего взносов, всего обещанных, разница
2) взносы отдельного субъекта, сгруппированные по периодам, выполненность периодов
3) все взносы по порядку
4) оплаты по назначениям: всего, для регулярных - задолженность
5) оплата одного назначения: по порядку или по периодам для регулярных
6) все оплаты по порядку
7) обмены по порядку
8) вся история вместе

сводные данные:
	- остаток
	- задолженность по каждому виду оплаты и всего
	- задолженность на следующий месяц
	- невыполненные обещанные взносы





интеграция:

1) связь между модулями - через пары type:integer,id:string
2) модуль запрашивает у интегратора объект с типом и id для отображения в таблицах вместо type+id
3) тип - это номер таблицы-интерфейса
	например модуль finance запрашивает у интегратора объект с таким-то id из модуля personal_info
4) нужен глобальный учёт таблиц-интерфейсов
5) external_id жёстко привязан к объекту в базе модуля, а external_type - к таблице с этими объектами
6) интегратор по глобальной таблице выбирает из какого модуля ему запрашивать объект и запрашивает
7) если модуля нет, или модуль вернул ошибку, или объект не найден - интегратор использует заглушки
8) когда добавляется модуль - всё что ему нужно сделать - зарегистрировать свои интерфейсы у интегратора
9) из полученного объекта можно получить его текстовое представление для "чужих" модулей
10) из объекта полученного у интегратора можно получить ссылку на детальное описание этого объекта в его "родном" модуле

? надо ли модулю декларировать свои зависимости (external_type которые он использует) ?



модули:
1) personal_info + contacts
3) finance
4) credentials (на случай удалённого входа)
5) social_info (интересы и т.д.)
6) projects
7) access_rights



